generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [pgvector(version: "0.5.0")]
}



model User {
  id        String    @id
  email     String    @unique
  firstName String?
  lastName  String?
  policies  Policy[]
  logs      RequestLog[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Policy {
  id          String      @id @default(uuid())
  name        String
  description String?
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  isActive    Boolean     @default(true)
  rules       Rule[]
  logs        RequestLog[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([userId])
}

model Rule {
  id          String   @id @default(uuid())
  name        String
  description String?
  policyId    String
  policy      Policy   @relation(fields: [policyId], references: [id], onDelete: Cascade)
  ruleType    RuleType
  parameters  Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([policyId])
}

model RequestLog {
  id         String    @id @default(uuid())
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  policyId   String?
  policy     Policy?   @relation(fields: [policyId], references: [id])
  request    Json
  response   Json?
  blocked    Boolean   @default(false)
  blockReason String?
  embedding  Unsupported("vector")?
  createdAt  DateTime  @default(now())

  @@index([userId])
  @@index([policyId])
}

enum RuleType {
  CONTENT_FILTER
  PROMPT_INJECTION
  TOXIC_LANGUAGE
  PII_DETECTION
  CUSTOM
}
